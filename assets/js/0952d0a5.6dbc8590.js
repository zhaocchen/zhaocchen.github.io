(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{209:function(e,n,t){"use strict";t.d(n,"a",(function(){return b})),t.d(n,"b",(function(){return d}));var r=t(0),a=t.n(r);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function c(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var i=a.a.createContext({}),u=function(e){var n=a.a.useContext(i),t=n;return e&&(t="function"==typeof e?e(n):c(c({},n),e)),t},b=function(e){var n=u(e.components);return a.a.createElement(i.Provider,{value:n},e.children)},m={inlineCode:"code",wrapper:function(e){var n=e.children;return a.a.createElement(a.a.Fragment,{},n)}},p=a.a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,i=s(e,["components","mdxType","originalType","parentName"]),b=u(t),p=r,d=b["".concat(l,".").concat(p)]||b[p]||m[p]||o;return t?a.a.createElement(d,c(c({ref:n},i),{},{components:t})):a.a.createElement(d,c({ref:n},i))}));function d(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,l=new Array(o);l[0]=p;var c={};for(var s in n)hasOwnProperty.call(n,s)&&(c[s]=n[s]);c.originalType=e,c.mdxType="string"==typeof e?e:r,l[1]=c;for(var i=2;i<o;i++)l[i]=t[i];return a.a.createElement.apply(null,l)}return a.a.createElement.apply(null,t)}p.displayName="MDXCreateElement"},74:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return l})),t.d(n,"metadata",(function(){return c})),t.d(n,"toc",(function(){return s})),t.d(n,"default",(function(){return u}));var r=t(3),a=t(7),o=(t(0),t(209)),l={title:"\u6570\u636e\u7ed3\u6784\u5165\u95e8",author:"Zhao chen",author_url:"https://github.com/zhaocchen",tags:[],draft:!1,description:null,Time:"2021-7"},c={unversionedId:"lcof/data-structures1",id:"lcof/data-structures1",isDocsHomePage:!1,title:"\u6570\u636e\u7ed3\u6784\u5165\u95e8",description:"| \u7b80\u5355 | \u4e2d\u7b49 | \u56f0\u96be |",source:"@site/docs/lcof/data-structures1.md",slug:"/lcof/data-structures1",permalink:"/docs/lcof/data-structures1",editUrl:"https://github.com/zhaocchen/zhaocchen.github.io/blob/master/docs/lcof/data-structures1.md",version:"current",sidebar:"docs",previous:{title:"\u884c\u4e3a\u578b | \u8bbf\u95ee\u8005\u6a21\u5f0f",permalink:"/docs/design-pattern/visitor"},next:{title:"\u6570\u636e\u7ed3\u6784\u57fa\u7840",permalink:"/docs/lcof/data-structures2"}},s=[{value:"day 1: \u6570\u7ec4",id:"day-1-\u6570\u7ec4",children:[]},{value:"day 2: \u6570\u7ec4",id:"day-2-\u6570\u7ec4",children:[]},{value:"day 3: \u6570\u7ec4",id:"day-3-\u6570\u7ec4",children:[]},{value:"day 4: \u6570\u7ec4",id:"day-4-\u6570\u7ec4",children:[]},{value:"day 5: \u6570\u7ec4",id:"day-5-\u6570\u7ec4",children:[]},{value:"day 6: \u5b57\u7b26\u4e32",id:"day-6-\u5b57\u7b26\u4e32",children:[]},{value:"day 7: \u94fe\u8868",id:"day-7-\u94fe\u8868",children:[]},{value:"day 8: \u94fe\u8868",id:"day-8-\u94fe\u8868",children:[]},{value:"day 9: \u6808/\u961f\u5217",id:"day-9-\u6808\u961f\u5217",children:[]},{value:"day 10: \u6811\uff08\u904d\u5386\uff09",id:"day-10-\u6811\uff08\u904d\u5386\uff09",children:[]},{value:"day 11: \u6811",id:"day-11-\u6811",children:[]},{value:"day 12: \u6811",id:"day-12-\u6811",children:[]},{value:"day 13: \u6811",id:"day-13-\u6811",children:[]},{value:"day 14: \u6811",id:"day-14-\u6811",children:[]}],i={toc:s};function u(e){var n=e.components,t=Object(a.a)(e,["components"]);return Object(o.b)("wrapper",Object(r.a)({},i,t,{components:n,mdxType:"MDXLayout"}),Object(o.b)("table",null,Object(o.b)("thead",{parentName:"table"},Object(o.b)("tr",{parentName:"thead"},Object(o.b)("th",{parentName:"tr",align:null},"\u7b80\u5355"),Object(o.b)("th",{parentName:"tr",align:null},"\u4e2d\u7b49"),Object(o.b)("th",{parentName:"tr",align:null},"\u56f0\u96be"))),Object(o.b)("tbody",{parentName:"table"},Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:null},"28"),Object(o.b)("td",{parentName:"tr",align:null},"5"),Object(o.b)("td",{parentName:"tr",align:null},"0")))),Object(o.b)("h3",{id:"day-1-\u6570\u7ec4"},"day 1: \u6570\u7ec4"),Object(o.b)("h4",{id:"217-\u5b58\u5728\u91cd\u590d\u5143\u7d20"},Object(o.b)("a",{parentName:"h4",href:"https://leetcode-cn.com/problems/contains-duplicate/"},"217. \u5b58\u5728\u91cd\u590d\u5143\u7d20")),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-ts"},"function containsDuplicate(nums: number[]): boolean {\n    let unique: Set<number> = new Set(nums);\n    return unique.size != nums.length;\n};\n")),Object(o.b)("h4",{id:"53-\u6700\u5927\u5b50\u5e8f\u548c"},Object(o.b)("a",{parentName:"h4",href:"https://leetcode-cn.com/problems/maximum-subarray/"},"53. \u6700\u5927\u5b50\u5e8f\u548c")),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-ts"},"function maxSubArray(nums: number[]): number {\n    let pre = nums[0];\n    let ans = pre;\n    for (let i = 1; i < nums.length; ++i) {\n        let cur = nums[i];\n        pre = Math.max(pre + cur, cur);\n        ans = Math.max(ans, pre);\n    }\n    return ans;\n};\n")),Object(o.b)("h3",{id:"day-2-\u6570\u7ec4"},"day 2: \u6570\u7ec4"),Object(o.b)("h4",{id:"1-\u4e24\u6570\u4e4b\u548c"},Object(o.b)("a",{parentName:"h4",href:"https://leetcode-cn.com/problems/two-sum/"},"1. \u4e24\u6570\u4e4b\u548c")),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-ts"},"function twoSum(nums: number[], target: number): number[] {\n    for (let i = nums.length; i >= 0; --i) {\n        let cur = nums[i];\n        if (nums.indexOf(target - cur) > -1) {\n            return [nums.indexOf(target - cur), i]\n        }\n    }\n    return [];\n};\n")),Object(o.b)("h4",{id:"88-\u5408\u5e76\u4e24\u4e2a\u6709\u5e8f\u6570\u7ec4"},Object(o.b)("a",{parentName:"h4",href:"https://leetcode-cn.com/problems/merge-sorted-array/"},"88. \u5408\u5e76\u4e24\u4e2a\u6709\u5e8f\u6570\u7ec4")),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-ts"},"function merge(nums1: number[], m: number, nums2: number[], n: number): void {\n    let i= m - 1, j = n - 1;\n    for (let k = nums1.length - 1; k >= 0; --k) {\n        if (i < 0 || nums1[i] < nums2[j]) {\n            nums1[k] = nums2[j];\n            --j;\n        } else {\n            nums1[k] = nums1[i];\n            --i;\n        }\n    }\n};\n")),Object(o.b)("h3",{id:"day-3-\u6570\u7ec4"},"day 3: \u6570\u7ec4"),Object(o.b)("h4",{id:"350-\u4e24\u4e2a\u6570\u7ec4\u7684\u4ea4\u96c6-ii"},Object(o.b)("a",{parentName:"h4",href:"https://leetcode-cn.com/problems/intersection-of-two-arrays-ii/"},"350. \u4e24\u4e2a\u6570\u7ec4\u7684\u4ea4\u96c6 II")),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-ts"},"function intersect(nums1: number[], nums2: number[]): number[] {\n    let counter = {};\n    for (let num of nums1) {\n        counter[num] = (counter[num] || 0) + 1;\n    }\n    let ans = [];\n    for (let num of nums2) {\n        if (counter[num] > 0) {\n            ans.push(num);\n            counter[num] -= 1;\n        }\n    }\n    return ans;\n};\n")),Object(o.b)("h4",{id:"121-\u4e70\u5356\u80a1\u7968\u7684\u6700\u4f73\u65f6\u673a"},Object(o.b)("a",{parentName:"h4",href:"https://leetcode-cn.com/problems/best-time-to-buy-and-sell-stock/"},"121. \u4e70\u5356\u80a1\u7968\u7684\u6700\u4f73\u65f6\u673a")),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-ts"},"function maxProfit(prices: number[]): number {\n   // \u6700\u591a\u53ea\u5141\u8bb8\u5b8c\u6210\u4e00\u7b14\u4ea4\u6613\n   let ans = 0;\n   let min = prices[0];\n   for (let cur of prices) {\n       if (cur > min && cur - min > ans) {\n           ans = cur - min;\n       }\n       if (cur < min) {\n           min = cur;\n       }\n   }\n   return ans;\n};\n")),Object(o.b)("h3",{id:"day-4-\u6570\u7ec4"},"day 4: \u6570\u7ec4"),Object(o.b)("h4",{id:"566-\u91cd\u5851\u77e9\u9635"},Object(o.b)("a",{parentName:"h4",href:"https://leetcode-cn.com/problems/reshape-the-matrix/"},"566. \u91cd\u5851\u77e9\u9635")),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-typescript"},"function matrixReshape(mat: number[][], r: number, c: number): number[][] {\n    let m = mat.length, n = mat[0].length;\n    if (m * n != r * c) return mat;\n    let ans = Array.from({length: r}, v => new Array(c).fill(0));\n    let k = 0;\n    for (let i = 0; i < m; ++i) {\n        for (let j = 0; j < n; ++j) {\n            ans[Math.floor(k / c)][k % c] = mat[i][j];\n            ++k;\n        }\n    }\n    return ans;\n};\n")),Object(o.b)("h4",{id:"118-\u6768\u8f89\u4e09\u89d2"},Object(o.b)("a",{parentName:"h4",href:"https://leetcode-cn.com/problems/pascals-triangle/"},"118. \u6768\u8f89\u4e09\u89d2")),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-typescript"},"function generate(numRows: number): number[][] {\n    if (numRows == 0) return [];\n    let ans = [[1]];\n    for (let i = 1; i < numRows; ++i) {\n        ans.push(new Array(i + 1).fill(1));\n        let half = i >> 1;\n        for (let j = 1;j <= half; ++j) {\n            let cur = ans[i - 1][j - 1] + ans[i - 1][j];\n            ans[i][j] = cur;\n            ans[i][i - j] = cur;\n        }\n    }\n    return ans;\n};\n")),Object(o.b)("h3",{id:"day-5-\u6570\u7ec4"},"day 5: \u6570\u7ec4"),Object(o.b)("h4",{id:"36-\u6709\u6548\u7684\u6570\u72ec"},Object(o.b)("a",{parentName:"h4",href:"https://leetcode-cn.com/problems/valid-sudoku/"},"36. \u6709\u6548\u7684\u6570\u72ec")),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-typescript"},"function isValidSudoku(board: string[][]): boolean {\n    let rows = Array.from({ length: 9 }, v => new Array(9).fill(false));\n    let cols = Array.from({ length: 9 }, v => new Array(9).fill(false));\n    let gong = Array.from({ length: 9 }, v => new Array(9).fill(false));\n    for (let i = 0; i < 9; i++) {\n        for (let j = 0; j < 9; j ++) {\n            let cur = board[i][j];\n            if (cur == '.') continue;\n            let k = Math.floor(i / 3) * 3 + Math.floor(j / 3);\n            if (rows[i][cur] || cols[j][cur] || gong[k][cur]) return false;\n            rows[i][cur] = true;\n            cols[j][cur] = true;\n            gong[k][cur] = true;\n        }\n    }\n    return true;\n};\n")),Object(o.b)("h4",{id:"73-\u77e9\u9635\u7f6e\u96f6"},Object(o.b)("a",{parentName:"h4",href:"https://leetcode-cn.com/problems/set-matrix-zeroes/"},"73. \u77e9\u9635\u7f6e\u96f6")),Object(o.b)("p",null,"\ud83d\udce2 \u7a7a\u95f4\u590d\u6742\u5ea6O(1)"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-typescript"},"/**\n Do not return anything, modify matrix in-place instead.\n */\nfunction setZeroes(matrix: number[][]): void {\n    let m = matrix.length, n = matrix[0].length;\n    let r0 = false;\n    // \u6807\u8bb0\n    for (let i = 0; i < m ; i++) {\n        if (!matrix[i][0]) {\n            r0 = true;\n        }\n        for (let j = 1; j < n; j++) {\n            if (!matrix[i][j]) {\n                matrix[i][0] = 0;\n                matrix[0][j] = 0;\n            }\n        }\n    }\n   \n    // set\n    for (let i = m - 1; i >= 0; i--) {\n        for (let j = 1; j < n; j++) {\n            if (!matrix[i][0] || !matrix[0][j]) {\n                matrix[i][j] = 0;\n            }\n        }\n        if (r0) {\n            matrix[i][0] = 0;\n        }\n    }\n};\n")),Object(o.b)("h3",{id:"day-6-\u5b57\u7b26\u4e32"},"day 6: \u5b57\u7b26\u4e32"),Object(o.b)("h4",{id:"387-\u5b57\u7b26\u4e32\u4e2d\u7684\u7b2c\u4e00\u4e2a\u552f\u4e00\u5b57\u7b26"},Object(o.b)("a",{parentName:"h4",href:"https://leetcode-cn.com/problems/first-unique-character-in-a-string/"},"387. \u5b57\u7b26\u4e32\u4e2d\u7684\u7b2c\u4e00\u4e2a\u552f\u4e00\u5b57\u7b26")),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-typescript"},"function firstUniqChar(s: string): number {\n    let record = new Map();\n    for (let cur of [...s]) {\n        record.set(cur, record.has(cur))\n    }\n    for (let i =0 ; i < s.length; i++) {\n        if (!record.get(s[i])) return i;\n    }\n    return -1;\n};\n")),Object(o.b)("h4",{id:"383-\u8d4e\u91d1\u4fe1"},Object(o.b)("a",{parentName:"h4",href:"https://leetcode-cn.com/problems/ransom-note/"},"383. \u8d4e\u91d1\u4fe1")),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-typescript"},"function canConstruct(ransomNote: string, magazine: string): boolean {\n    let counter = new Array(26).fill(0);\n    let base = 'a'.charCodeAt(0);\n    for (let s of magazine) {\n        ++counter[s.charCodeAt(0) - base];\n    }\n    for (let s of ransomNote) {\n        let idx = s.charCodeAt(0) - base;\n        if (counter[idx] == 0) return false;\n        --counter[idx];\n    }\n    return true;\n};\n")),Object(o.b)("h4",{id:"242-\u6709\u6548\u7684\u5b57\u6bcd\u5f02\u4f4d\u8bcd"},Object(o.b)("a",{parentName:"h4",href:"https://leetcode-cn.com/problems/valid-anagram/"},"242. \u6709\u6548\u7684\u5b57\u6bcd\u5f02\u4f4d\u8bcd")),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-typescript"},"function isAnagram(s: string, t: string): boolean {\n    if (s.length != t.length) return false;\n    let record = new Array(26).fill(0);\n    let base = 'a'.charCodeAt(0);\n    for (let i = 0; i < s.length; ++i) {\n        ++record[s.charCodeAt(i) - base];\n        --record[t.charCodeAt(i) - base];\n    }\n    return record.every(v => v == 0);\n};\n")),Object(o.b)("h3",{id:"day-7-\u94fe\u8868"},"day 7: \u94fe\u8868"),Object(o.b)("h4",{id:"141-\u73af\u5f62\u94fe\u8868"},Object(o.b)("a",{parentName:"h4",href:"https://leetcode-cn.com/problems/linked-list-cycle/"},"141. \u73af\u5f62\u94fe\u8868")),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-typescript"},"function hasCycle(head: ListNode | null): boolean {\n    let slow = head, fast = head;\n    while (fast != null && fast.next != null) {\n        slow = slow.next;\n        fast = fast.next.next;\n        if (slow == fast) return true;\n    }\n    return false;\n};\n")),Object(o.b)("h4",{id:"21-\u5408\u5e76\u4e24\u4e2a\u6709\u5e8f\u94fe\u8868"},Object(o.b)("a",{parentName:"h4",href:"https://leetcode-cn.com/problems/merge-two-sorted-lists/"},"21. \u5408\u5e76\u4e24\u4e2a\u6709\u5e8f\u94fe\u8868")),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-typescript"},"function mergeTwoLists(l1: ListNode | null, l2: ListNode | null): ListNode | null {\n    let dummy = new ListNode(0), head = dummy;\n    while (l1 != null && l2 != null) {\n        if (l1.val < l2.val) {\n            head.next = l1;\n            l1 = l1.next;\n        } else {\n            head.next = l2;\n            l2 = l2.next;\n        }\n        head = head.next;\n    }\n    head.next = l1 != null ? l1 : l2;\n    return dummy.next;\n};\n")),Object(o.b)("h4",{id:"203-\u79fb\u9664\u94fe\u8868\u5143\u7d20"},Object(o.b)("a",{parentName:"h4",href:"https://leetcode-cn.com/problems/remove-linked-list-elements/"},"203. \u79fb\u9664\u94fe\u8868\u5143\u7d20")),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-typescript"},"function removeElements(head: ListNode | null, val: number): ListNode | null {\n    let dummy: ListNode = new ListNode(0, head);\n    let cur: ListNode = dummy;\n    while (cur.next != null) {\n        if (cur.next.val == val) {\n            cur.next = cur.next.next;\n        } else {\n            cur = cur.next;\n        }\n    }\n    return dummy.next;\n};\n")),Object(o.b)("h3",{id:"day-8-\u94fe\u8868"},"day 8: \u94fe\u8868"),Object(o.b)("h4",{id:"206-\u53cd\u8f6c\u94fe\u8868"},Object(o.b)("a",{parentName:"h4",href:"https://leetcode-cn.com/problems/reverse-linked-list/"},"206. \u53cd\u8f6c\u94fe\u8868")),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-typescript"},"function reverseList(head: ListNode | null): ListNode | null {\n    let prev = null;\n    let cur = head;\n    while (cur != null) {\n        let next = cur.next;\n        cur.next = prev;\n        prev = cur;\n        cur = next;\n    }\n    return prev;\n};\n")),Object(o.b)("h4",{id:"83-\u5220\u9664\u6392\u5e8f\u94fe\u8868\u4e2d\u7684\u91cd\u590d\u5143\u7d20"},Object(o.b)("a",{parentName:"h4",href:"https://leetcode-cn.com/problems/remove-duplicates-from-sorted-list/"},"83. \u5220\u9664\u6392\u5e8f\u94fe\u8868\u4e2d\u7684\u91cd\u590d\u5143\u7d20")),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-typescript"},"function deleteDuplicates(head: ListNode | null): ListNode | null {\n    if (head == null || head.next == null) return head;\n    let cur = head;\n    while (cur !== null && cur.next !== null) {\n        if (cur.next.val == cur.val) {\n            cur.next = cur.next.next;\n        } else {\n            cur = cur.next;\n        }\n    }\n    return head;\n};\n")),Object(o.b)("h3",{id:"day-9-\u6808\u961f\u5217"},"day 9: \u6808/\u961f\u5217"),Object(o.b)("h4",{id:"20-\u6709\u6548\u7684\u62ec\u53f7"},Object(o.b)("a",{parentName:"h4",href:"https://leetcode-cn.com/problems/valid-parentheses/"},"20. \u6709\u6548\u7684\u62ec\u53f7")),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-typescript"},"function isValid(s: string): boolean {\n    // \u6808\uff0c \u5148\u8fdb\u540e\u51fa\n    let hashTable = new Map([\n        ['(', ')'],\n        ['{', '}'],\n        ['[', ']']\n    ]);\n    let stack = [];\n    for (let char of s) {\n        let last = stack[stack.length - 1];\n        if (stack.length > 0 && char == hashTable.get(last)) {\n            stack.pop();\n        } else {\n            stack.push(char);\n        }\n    }\n    return stack.length === 0;\n};\n")),Object(o.b)("h4",{id:"232-\u7528\u6808\u5b9e\u73b0\u961f\u5217"},Object(o.b)("a",{parentName:"h4",href:"https://leetcode-cn.com/problems/implement-queue-using-stacks/"},"232. \u7528\u6808\u5b9e\u73b0\u961f\u5217")),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-typescript"},"class MyQueue {\n    stack1: number[];\n    stack2: number[];\n    constructor() {\n        this.stack1 = [];\n        this.stack2 = [];\n    }\n\n    push(x: number): void {\n        this.stack1.push(x);\n    }\n\n    pop(): number {\n        if (!this.stack2.length) {\n            while (this.stack1.length) {\n                this.stack2.push(this.stack1.pop());\n            }\n        }\n        return this.stack2.pop();\n    }\n\n    peek(): number {\n        if (!this.stack2.length) {\n            while (this.stack1.length) {\n                this.stack2.push(this.stack1.pop());\n            }\n        }\n        return this.stack2[this.stack2.length - 1];\n    }\n\n    empty(): boolean {\n        return !this.stack1.length && !this.stack2.length;\n    }\n}\n")),Object(o.b)("h3",{id:"day-10-\u6811\uff08\u904d\u5386\uff09"},"day 10: \u6811\uff08\u904d\u5386\uff09"),Object(o.b)("h4",{id:"144-\u4e8c\u53c9\u6811\u7684\u524d\u5e8f\u904d\u5386"},Object(o.b)("a",{parentName:"h4",href:"https://leetcode-cn.com/problems/binary-tree-preorder-traversal/"},"144. \u4e8c\u53c9\u6811\u7684\u524d\u5e8f\u904d\u5386")),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-typescript"},"function preorderTraversal(root: TreeNode | null): number[] {\n    if (root == null) return [];\n    let stack = [];\n    let ans = [];\n    while (root || stack.length) {\n        while (root) {\n            ans.push(root.val);\n            stack.push(root);\n            root = root.left;\n        }\n        root = stack.pop();\n        root = root.right;\n    }\n    return ans;\n};\n")),Object(o.b)("h4",{id:"94-\u4e8c\u53c9\u6811\u7684\u4e2d\u5e8f\u904d\u5386"},Object(o.b)("a",{parentName:"h4",href:"https://leetcode-cn.com/problems/binary-tree-inorder-traversal/"},"94. \u4e8c\u53c9\u6811\u7684\u4e2d\u5e8f\u904d\u5386")),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-typescript"},"function inorderTraversal(root: TreeNode | null): number[] {\n    if (root == null) return [];\n    let stack = [];\n    let ans = [];\n    while (root != null || stack.length > 0) {\n        if (root != null) {\n            stack.push(root);\n            root = root.left\n        } else {\n            root = stack.pop();\n            ans.push(root.val);\n            root = root.right;\n        }\n    }\n    return ans;\n};\n")),Object(o.b)("h4",{id:"145-\u4e8c\u53c9\u6811\u7684\u540e\u5e8f\u904d\u5386"},Object(o.b)("a",{parentName:"h4",href:"https://leetcode-cn.com/problems/binary-tree-postorder-traversal/"},"145. \u4e8c\u53c9\u6811\u7684\u540e\u5e8f\u904d\u5386")),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-typescript"},"function postorderTraversal(root: TreeNode | null): number[] {\n    if (root == null) return [];\n    let stack = [];\n    let ans = [];\n    let prev = null;\n    while (root || stack.length) {\n        while (root) {\n            stack.push(root);\n            root = root.left;\n        }\n        root = stack.pop();\n        if (!root.right || root.right == prev) {\n            ans.push(root.val);\n            prev = root;\n            root = null;\n        } else {\n            stack.push(root);\n            root = root.right;\n        }\n        \n    }\n    return ans;\n};\n")),Object(o.b)("h3",{id:"day-11-\u6811"},"day 11: \u6811"),Object(o.b)("h4",{id:"102-\u4e8c\u53c9\u6811\u7684\u5c42\u5e8f\u904d\u5386"},Object(o.b)("a",{parentName:"h4",href:"https://leetcode-cn.com/problems/binary-tree-level-order-traversal/"},"102. \u4e8c\u53c9\u6811\u7684\u5c42\u5e8f\u904d\u5386")),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-typescript"},"function levelOrder(root: TreeNode | null): number[][] {\n    if (!root) return [];\n    let stack = [root];\n    let ans = [];\n    while (stack.length) {\n        let level = [];\n        let next = [];\n        for (let node of stack) {\n            level.push(node.val);\n            node.left && next.push(node.left);\n            node.right && next.push(node.right);\n        }\n        ans.push(level);\n        stack = next;\n    }\n    return ans;\n};\n")),Object(o.b)("h4",{id:"104-\u4e8c\u53c9\u6811\u7684\u6700\u5927\u6df1\u5ea6"},Object(o.b)("a",{parentName:"h4",href:"https://leetcode-cn.com/problems/maximum-depth-of-binary-tree/"},"104. \u4e8c\u53c9\u6811\u7684\u6700\u5927\u6df1\u5ea6")),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-typescript"},"function maxDepth(root: TreeNode | null): number {\n    if (!root) return 0;\n    return Math.max(maxDepth(root.left), maxDepth(root.right)) + 1;\n};\n")),Object(o.b)("h4",{id:"101-\u5bf9\u79f0\u4e8c\u53c9\u6811"},Object(o.b)("a",{parentName:"h4",href:"https://leetcode-cn.com/problems/symmetric-tree/"},"101. \u5bf9\u79f0\u4e8c\u53c9\u6811")),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-typescript"},"function isSymmetric(root: TreeNode | null): boolean {\n    return isSame(root, root);\n};\n\nfunction isSame (root1: TreeNode | null, root2: TreeNode | null): boolean {\n    if (!root1 || !root2) return root1 == root2;\n    if (root1.val != root2.val) return false;\n    return isSame(root1.left, root2.right) && isSame(root1.right, root2.left);\n}\n")),Object(o.b)("h3",{id:"day-12-\u6811"},"day 12: \u6811"),Object(o.b)("h4",{id:"226-\u7ffb\u8f6c\u4e8c\u53c9\u6811"},Object(o.b)("a",{parentName:"h4",href:"https://leetcode-cn.com/problems/invert-binary-tree/"},"226. \u7ffb\u8f6c\u4e8c\u53c9\u6811")),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-typescript"},"function invertTree(root: TreeNode | null): TreeNode | null {\n    if (!root) return root;\n    [root.left, root.right] = [root.right, root.left];\n    invertTree(root.left);\n    invertTree(root.right);\n    return root;\n};\n")),Object(o.b)("h4",{id:"112-\u8def\u5f84\u603b\u548c"},Object(o.b)("a",{parentName:"h4",href:"https://leetcode-cn.com/problems/path-sum/"},"112. \u8def\u5f84\u603b\u548c")),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-typescript"},"function hasPathSum(root: TreeNode | null, targetSum: number): boolean {\n    if (!root) return false;\n    targetSum -= root.val;\n    if (!root.left && !root.right && targetSum == 0) return true;\n    if (root.left && hasPathSum(root.left, targetSum)) return true;\n    if (root.right && hasPathSum(root.right, targetSum)) return true;\n    return false;\n};\n")),Object(o.b)("h3",{id:"day-13-\u6811"},"day 13: \u6811"),Object(o.b)("h4",{id:"700-\u4e8c\u53c9\u641c\u7d22\u6811\u4e2d\u7684\u641c\u7d22"},Object(o.b)("a",{parentName:"h4",href:"https://leetcode-cn.com/problems/search-in-a-binary-search-tree/"},"700. \u4e8c\u53c9\u641c\u7d22\u6811\u4e2d\u7684\u641c\u7d22")),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-typescript"},"function searchBST(root: TreeNode | null, val: number): TreeNode | null {\n    if (!root) return null;\n    if (root.val == val) return root;\n    return root.val < val ? searchBST(root.right, val) : searchBST(root.left, val);\n};\n")),Object(o.b)("h4",{id:"701-\u4e8c\u53c9\u641c\u7d22\u6811\u4e2d\u7684\u63d2\u5165\u64cd\u4f5c"},Object(o.b)("a",{parentName:"h4",href:"https://leetcode-cn.com/problems/insert-into-a-binary-search-tree/"},"701. \u4e8c\u53c9\u641c\u7d22\u6811\u4e2d\u7684\u63d2\u5165\u64cd\u4f5c")),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-typescript"},"function insertIntoBST(root: TreeNode | null, val: number): TreeNode | null {\n    if (!root) return new TreeNode(val);\n    if (root.val < val) {\n        root.right = insertIntoBST(root.right, val);\n    } else {\n        root.left = insertIntoBST(root.left, val);\n    }\n    return root;\n};\n")),Object(o.b)("h3",{id:"day-14-\u6811"},"day 14: \u6811"),Object(o.b)("h4",{id:"98-\u9a8c\u8bc1\u4e8c\u53c9\u641c\u7d22\u6811"},Object(o.b)("a",{parentName:"h4",href:"https://leetcode-cn.com/problems/validate-binary-search-tree/"},"98. \u9a8c\u8bc1\u4e8c\u53c9\u641c\u7d22\u6811")),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-typescript"},"function isValidBST(root: TreeNode | null): boolean {\n    return compareBST(root, -Infinity, Infinity);\n};\n\nfunction compareBST(root: TreeNode | null, min: number, max: number): boolean {\n    if (!root) return true;\n    let cur = root.val;\n    if (cur <= min || cur >= max) return false;\n    return compareBST(root.left, min, cur) && compareBST(root.right, cur, max);\n}\n")),Object(o.b)("h4",{id:"653-\u4e24\u6570\u4e4b\u548c-iv---\u8f93\u5165-bst"},Object(o.b)("a",{parentName:"h4",href:"https://leetcode-cn.com/problems/two-sum-iv-input-is-a-bst/"},"653. \u4e24\u6570\u4e4b\u548c IV - \u8f93\u5165 BST")),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-typescript"},"function findTarget(root: TreeNode | null, k: number): boolean {\n    let set: Set<number> = new Set();\n    return find(root, k, set);\n};\n\n\nfunction find(root: TreeNode | null, k: number, set: Set<number>): boolean {\n    if (!root) return false;\n    if (set.has(k - root.val)) return true;\n    set.add(root.val);\n    return find(root.left, k, set) || find(root.right, k, set);\n}\n")),Object(o.b)("h4",{id:"235-\u4e8c\u53c9\u641c\u7d22\u6811\u7684\u6700\u8fd1\u516c\u5171\u7956\u5148"},Object(o.b)("a",{parentName:"h4",href:"https://leetcode-cn.com/problems/lowest-common-ancestor-of-a-binary-search-tree/"},"235. \u4e8c\u53c9\u641c\u7d22\u6811\u7684\u6700\u8fd1\u516c\u5171\u7956\u5148")),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-typescript"},"function lowestCommonAncestor(root: TreeNode | null, p: TreeNode | null, q: TreeNode | null): TreeNode | null {\n    while (root) {\n        if (root.val > p.val && root.val > q.val) {\n            root = root.left;\n        } else if (root.val < p.val && root.val < q.val) {\n            root = root.right;\n        } else {\n            return root;\n        }\n    }\n};\n")))}u.isMDXComponent=!0}}]);